spring:
  mvc:
    problemdetails:
      enabled: true
  session:
    redis:
      flush-mode: on-save
  docker:
    compose:
      file: docker-compose.yml
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.hibernate.format_sql: true
      hibernate.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}

server:
  port: 8080
  error:
    include-message: always

jwt:
  secret: ${JWT_SECRET}
  issuer: ${JWT_ISSUER}
  audience: ${JWT_AUDIENCE}
  access-token-expiration: ${ACCESS_TOKEN_EXPIRATION}
  refresh-token-expiration: ${REFRESH_TOKEN_EXPIRATION}


logging:
  level:
    org:
      springframework: ERROR
      springframework.security: INFO
      autoconfigure: INFO